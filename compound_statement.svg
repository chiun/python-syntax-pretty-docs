<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1978px" preserveAspectRatio="none" style="width:1616px;height:1978px;" version="1.1" viewBox="0 0 1616 1978" width="1616px" zoomAndPan="magnify"><defs><filter height="300%" id="f1qiqi72sr0axx" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster compound_stmt--><polygon fill="#FFFFFF" filter="url(#f1qiqi72sr0axx)" points="130.5,80,256.5,80,263.5,107.2813,577.5,107.2813,577.5,1874,130.5,1874,130.5,80" style="stroke: #000000; stroke-width: 2.0;"/><line style="stroke: #000000; stroke-width: 2.0;" x1="130.5" x2="263.5" y1="107.2813" y2="107.2813"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="120" x="134.5" y="99.2656">compound_stmt</text><!--class compound_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="260.8125" id="compound_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="147" x="240" y="1597"/><ellipse cx="255" cy="1613" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M256.6563,1614.4688 L252.8438,1614.4688 L252.4844,1615.4063 L252.8438,1615.4063 C253.2813,1615.4063 253.4063,1615.4375 253.5625,1615.5469 C253.7813,1615.7031 253.9063,1615.9375 253.9063,1616.2031 C253.9063,1616.4688 253.7656,1616.75 253.5156,1616.8906 C253.3906,1616.9688 253.1875,1617 252.8438,1617 L250.7188,1617 C250.0156,1617 249.6563,1616.7344 249.6563,1616.2031 C249.6563,1615.9219 249.8125,1615.6563 250.0469,1615.5156 C250.1875,1615.4219 250.3438,1615.4063 250.7344,1615.4063 L253.2188,1609.2656 L252.2031,1609.2656 C251.7969,1609.2656 251.625,1609.2344 251.4688,1609.125 C251.2656,1608.9688 251.1406,1608.7344 251.1406,1608.4688 C251.1406,1608.2031 251.2813,1607.9375 251.5156,1607.7813 C251.6563,1607.6875 251.7813,1607.6719 252.2031,1607.6719 L255.6563,1607.6719 L258.8438,1615.4063 C259.2969,1615.4063 259.4375,1615.4375 259.5938,1615.5625 C259.8125,1615.7031 259.9375,1615.9375 259.9375,1616.2031 C259.9375,1616.4688 259.7969,1616.75 259.5469,1616.8906 C259.4219,1616.9688 259.2188,1617 258.875,1617 L256.6563,1617 C256.2656,1617 256.0781,1616.9531 255.9375,1616.8438 C255.7344,1616.7031 255.5938,1616.4531 255.5938,1616.2031 C255.5938,1615.9219 255.75,1615.6563 255.9844,1615.5156 C256.125,1615.4219 256.2344,1615.4063 256.6563,1615.4063 L257.0313,1615.4063 Z M256,1612.875 L254.75,1609.7969 L253.4844,1612.875 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="115" x="269" y="1619.6953">compound_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="241" x2="386" y1="1629" y2="1629"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="50" x="246" y="1650.2656">if_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="78" x="246" y="1671.5469">while_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="62" x="246" y="1692.8281">for_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="60" x="246" y="1714.1094">try_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="71" x="246" y="1735.3906">with_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="57" x="246" y="1756.6719">funcdef</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="59" x="246" y="1777.9531">classdef</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="118" x="246" y="1799.2344">async_with_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="109" x="246" y="1820.5156">async_for_stmt</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="104" x="246" y="1841.7969">async_funcdef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="241" x2="386" y1="1849.8125" y2="1849.8125"/><!--class if_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="if_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="82" x="479.5" y="1468"/><ellipse cx="494.5" cy="1484" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M496.6563,1479.4844 L496.8125,1479.5625 C497.0156,1479.2656 497.2188,1479.1719 497.4844,1479.1719 C497.7656,1479.1719 498.0313,1479.3125 498.1719,1479.5625 C498.2656,1479.7031 498.2813,1479.8281 498.2813,1480.2344 L498.2813,1481.5781 C498.2813,1481.9688 498.25,1482.1406 498.1406,1482.2969 C497.9844,1482.5 497.7344,1482.625 497.4844,1482.625 C497.2813,1482.625 497.0469,1482.5313 496.9219,1482.4063 C496.7969,1482.2813 496.7656,1482.1563 496.7031,1481.7813 C496.625,1481.3906 496.4531,1481.1875 496,1480.9375 C495.5625,1480.6875 494.9844,1480.5469 494.4375,1480.5469 C492.8125,1480.5469 491.625,1481.7813 491.625,1483.4531 L491.625,1484.4844 C491.625,1486.0781 492.8594,1487.125 494.7813,1487.125 C495.5,1487.125 496.1406,1487 496.5469,1486.75 C496.7188,1486.6563 496.7188,1486.6563 497.1406,1486.2188 C497.3281,1486.0313 497.5156,1485.9531 497.7188,1485.9531 C498.1563,1485.9531 498.5313,1486.3281 498.5313,1486.75 C498.5313,1487.125 498.2188,1487.5469 497.6719,1487.9219 C496.9688,1488.4375 495.8906,1488.7188 494.7344,1488.7188 C492.0156,1488.7188 490.0313,1486.9531 490.0313,1484.5156 L490.0313,1483.4531 C490.0313,1480.9063 491.9219,1478.9531 494.375,1478.9531 C495.2188,1478.9531 495.7656,1479.0781 496.6563,1479.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="50" x="508.5" y="1490.625">if_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="480.5" x2="560.5" y1="1500" y2="1500"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="485.5" y="1521.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="480.5" x2="560.5" y1="1529.2813" y2="1529.2813"/><!--class while_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="while_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="445.5" y="1339"/><ellipse cx="460.5" cy="1355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M462.6563,1350.4844 L462.8125,1350.5625 C463.0156,1350.2656 463.2188,1350.1719 463.4844,1350.1719 C463.7656,1350.1719 464.0313,1350.3125 464.1719,1350.5625 C464.2656,1350.7031 464.2813,1350.8281 464.2813,1351.2344 L464.2813,1352.5781 C464.2813,1352.9688 464.25,1353.1406 464.1406,1353.2969 C463.9844,1353.5 463.7344,1353.625 463.4844,1353.625 C463.2813,1353.625 463.0469,1353.5313 462.9219,1353.4063 C462.7969,1353.2813 462.7656,1353.1563 462.7031,1352.7813 C462.625,1352.3906 462.4531,1352.1875 462,1351.9375 C461.5625,1351.6875 460.9844,1351.5469 460.4375,1351.5469 C458.8125,1351.5469 457.625,1352.7813 457.625,1354.4531 L457.625,1355.4844 C457.625,1357.0781 458.8594,1358.125 460.7813,1358.125 C461.5,1358.125 462.1406,1358 462.5469,1357.75 C462.7188,1357.6563 462.7188,1357.6563 463.1406,1357.2188 C463.3281,1357.0313 463.5156,1356.9531 463.7188,1356.9531 C464.1563,1356.9531 464.5313,1357.3281 464.5313,1357.75 C464.5313,1358.125 464.2188,1358.5469 463.6719,1358.9219 C462.9688,1359.4375 461.8906,1359.7188 460.7344,1359.7188 C458.0156,1359.7188 456.0313,1357.9531 456.0313,1355.5156 L456.0313,1354.4531 C456.0313,1351.9063 457.9219,1349.9531 460.375,1349.9531 C461.2188,1349.9531 461.7656,1350.0781 462.6563,1350.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="78" x="474.5" y="1361.625">while_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="446.5" x2="554.5" y1="1371" y2="1371"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="451.5" y="1392.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="446.5" x2="554.5" y1="1400.2813" y2="1400.2813"/><!--class for_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="for_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="434.5" y="1210"/><ellipse cx="449.5" cy="1226" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M451.6563,1221.4844 L451.8125,1221.5625 C452.0156,1221.2656 452.2188,1221.1719 452.4844,1221.1719 C452.7656,1221.1719 453.0313,1221.3125 453.1719,1221.5625 C453.2656,1221.7031 453.2813,1221.8281 453.2813,1222.2344 L453.2813,1223.5781 C453.2813,1223.9688 453.25,1224.1406 453.1406,1224.2969 C452.9844,1224.5 452.7344,1224.625 452.4844,1224.625 C452.2813,1224.625 452.0469,1224.5313 451.9219,1224.4063 C451.7969,1224.2813 451.7656,1224.1563 451.7031,1223.7813 C451.625,1223.3906 451.4531,1223.1875 451,1222.9375 C450.5625,1222.6875 449.9844,1222.5469 449.4375,1222.5469 C447.8125,1222.5469 446.625,1223.7813 446.625,1225.4531 L446.625,1226.4844 C446.625,1228.0781 447.8594,1229.125 449.7813,1229.125 C450.5,1229.125 451.1406,1229 451.5469,1228.75 C451.7188,1228.6563 451.7188,1228.6563 452.1406,1228.2188 C452.3281,1228.0313 452.5156,1227.9531 452.7188,1227.9531 C453.1563,1227.9531 453.5313,1228.3281 453.5313,1228.75 C453.5313,1229.125 453.2188,1229.5469 452.6719,1229.9219 C451.9688,1230.4375 450.8906,1230.7188 449.7344,1230.7188 C447.0156,1230.7188 445.0313,1228.9531 445.0313,1226.5156 L445.0313,1225.4531 C445.0313,1222.9063 446.9219,1220.9531 449.375,1220.9531 C450.2188,1220.9531 450.7656,1221.0781 451.6563,1221.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="62" x="463.5" y="1232.625">for_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="435.5" x2="527.5" y1="1242" y2="1242"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="440.5" y="1263.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="435.5" x2="527.5" y1="1271.2813" y2="1271.2813"/><!--class try_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="try_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="92" x="417.5" y="1081"/><ellipse cx="432.5" cy="1097" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M434.6563,1092.4844 L434.8125,1092.5625 C435.0156,1092.2656 435.2188,1092.1719 435.4844,1092.1719 C435.7656,1092.1719 436.0313,1092.3125 436.1719,1092.5625 C436.2656,1092.7031 436.2813,1092.8281 436.2813,1093.2344 L436.2813,1094.5781 C436.2813,1094.9688 436.25,1095.1406 436.1406,1095.2969 C435.9844,1095.5 435.7344,1095.625 435.4844,1095.625 C435.2813,1095.625 435.0469,1095.5313 434.9219,1095.4063 C434.7969,1095.2813 434.7656,1095.1563 434.7031,1094.7813 C434.625,1094.3906 434.4531,1094.1875 434,1093.9375 C433.5625,1093.6875 432.9844,1093.5469 432.4375,1093.5469 C430.8125,1093.5469 429.625,1094.7813 429.625,1096.4531 L429.625,1097.4844 C429.625,1099.0781 430.8594,1100.125 432.7813,1100.125 C433.5,1100.125 434.1406,1100 434.5469,1099.75 C434.7188,1099.6563 434.7188,1099.6563 435.1406,1099.2188 C435.3281,1099.0313 435.5156,1098.9531 435.7188,1098.9531 C436.1563,1098.9531 436.5313,1099.3281 436.5313,1099.75 C436.5313,1100.125 436.2188,1100.5469 435.6719,1100.9219 C434.9688,1101.4375 433.8906,1101.7188 432.7344,1101.7188 C430.0156,1101.7188 428.0313,1099.9531 428.0313,1097.5156 L428.0313,1096.4531 C428.0313,1093.9063 429.9219,1091.9531 432.375,1091.9531 C433.2188,1091.9531 433.7656,1092.0781 434.6563,1092.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="60" x="446.5" y="1103.625">try_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="418.5" x2="508.5" y1="1113" y2="1113"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="423.5" y="1134.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="418.5" x2="508.5" y1="1142.2813" y2="1142.2813"/><!--class with_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="with_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="103" x="394" y="890.5"/><ellipse cx="409" cy="906.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M411.1563,901.9844 L411.3125,902.0625 C411.5156,901.7656 411.7188,901.6719 411.9844,901.6719 C412.2656,901.6719 412.5313,901.8125 412.6719,902.0625 C412.7656,902.2031 412.7813,902.3281 412.7813,902.7344 L412.7813,904.0781 C412.7813,904.4688 412.75,904.6406 412.6406,904.7969 C412.4844,905 412.2344,905.125 411.9844,905.125 C411.7813,905.125 411.5469,905.0313 411.4219,904.9063 C411.2969,904.7813 411.2656,904.6563 411.2031,904.2813 C411.125,903.8906 410.9531,903.6875 410.5,903.4375 C410.0625,903.1875 409.4844,903.0469 408.9375,903.0469 C407.3125,903.0469 406.125,904.2813 406.125,905.9531 L406.125,906.9844 C406.125,908.5781 407.3594,909.625 409.2813,909.625 C410,909.625 410.6406,909.5 411.0469,909.25 C411.2188,909.1563 411.2188,909.1563 411.6406,908.7188 C411.8281,908.5313 412.0156,908.4531 412.2188,908.4531 C412.6563,908.4531 413.0313,908.8281 413.0313,909.25 C413.0313,909.625 412.7188,910.0469 412.1719,910.4219 C411.4688,910.9375 410.3906,911.2188 409.2344,911.2188 C406.5156,911.2188 404.5313,909.4531 404.5313,907.0156 L404.5313,905.9531 C404.5313,903.4063 406.4219,901.4531 408.875,901.4531 C409.7188,901.4531 410.2656,901.5781 411.1563,901.9844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="71" x="423" y="913.125">with_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="395" x2="496" y1="922.5" y2="922.5"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="400" y="943.7656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="395" x2="496" y1="951.7813" y2="951.7813"/><!--class funcdef--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="funcdef" style="stroke: #A80036; stroke-width: 1.5;" width="89" x="382" y="700"/><ellipse cx="397" cy="716" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M399.1563,711.4844 L399.3125,711.5625 C399.5156,711.2656 399.7188,711.1719 399.9844,711.1719 C400.2656,711.1719 400.5313,711.3125 400.6719,711.5625 C400.7656,711.7031 400.7813,711.8281 400.7813,712.2344 L400.7813,713.5781 C400.7813,713.9688 400.75,714.1406 400.6406,714.2969 C400.4844,714.5 400.2344,714.625 399.9844,714.625 C399.7813,714.625 399.5469,714.5313 399.4219,714.4063 C399.2969,714.2813 399.2656,714.1563 399.2031,713.7813 C399.125,713.3906 398.9531,713.1875 398.5,712.9375 C398.0625,712.6875 397.4844,712.5469 396.9375,712.5469 C395.3125,712.5469 394.125,713.7813 394.125,715.4531 L394.125,716.4844 C394.125,718.0781 395.3594,719.125 397.2813,719.125 C398,719.125 398.6406,719 399.0469,718.75 C399.2188,718.6563 399.2188,718.6563 399.6406,718.2188 C399.8281,718.0313 400.0156,717.9531 400.2188,717.9531 C400.6563,717.9531 401.0313,718.3281 401.0313,718.75 C401.0313,719.125 400.7188,719.5469 400.1719,719.9219 C399.4688,720.4375 398.3906,720.7188 397.2344,720.7188 C394.5156,720.7188 392.5313,718.9531 392.5313,716.5156 L392.5313,715.4531 C392.5313,712.9063 394.4219,710.9531 396.875,710.9531 C397.7188,710.9531 398.2656,711.0781 399.1563,711.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="57" x="411" y="722.625">funcdef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="383" x2="470" y1="732" y2="732"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="388" y="753.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="383" x2="470" y1="761.2813" y2="761.2813"/><!--class classdef--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="classdef" style="stroke: #A80036; stroke-width: 1.5;" width="91" x="363" y="571"/><ellipse cx="378" cy="587" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.1563,582.4844 L380.3125,582.5625 C380.5156,582.2656 380.7188,582.1719 380.9844,582.1719 C381.2656,582.1719 381.5313,582.3125 381.6719,582.5625 C381.7656,582.7031 381.7813,582.8281 381.7813,583.2344 L381.7813,584.5781 C381.7813,584.9688 381.75,585.1406 381.6406,585.2969 C381.4844,585.5 381.2344,585.625 380.9844,585.625 C380.7813,585.625 380.5469,585.5313 380.4219,585.4063 C380.2969,585.2813 380.2656,585.1563 380.2031,584.7813 C380.125,584.3906 379.9531,584.1875 379.5,583.9375 C379.0625,583.6875 378.4844,583.5469 377.9375,583.5469 C376.3125,583.5469 375.125,584.7813 375.125,586.4531 L375.125,587.4844 C375.125,589.0781 376.3594,590.125 378.2813,590.125 C379,590.125 379.6406,590 380.0469,589.75 C380.2188,589.6563 380.2188,589.6563 380.6406,589.2188 C380.8281,589.0313 381.0156,588.9531 381.2188,588.9531 C381.6563,588.9531 382.0313,589.3281 382.0313,589.75 C382.0313,590.125 381.7188,590.5469 381.1719,590.9219 C380.4688,591.4375 379.3906,591.7188 378.2344,591.7188 C375.5156,591.7188 373.5313,589.9531 373.5313,587.5156 L373.5313,586.4531 C373.5313,583.9063 375.4219,581.9531 377.875,581.9531 C378.7188,581.9531 379.2656,582.0781 380.1563,582.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="59" x="392" y="593.625">classdef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="364" x2="453" y1="603" y2="603"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="369" y="624.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="364" x2="453" y1="632.2813" y2="632.2813"/><!--class async_with_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="48" id="async_with_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="150" x="315.5" y="463"/><ellipse cx="330.5" cy="479" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M332.6563,474.4844 L332.8125,474.5625 C333.0156,474.2656 333.2188,474.1719 333.4844,474.1719 C333.7656,474.1719 334.0313,474.3125 334.1719,474.5625 C334.2656,474.7031 334.2813,474.8281 334.2813,475.2344 L334.2813,476.5781 C334.2813,476.9688 334.25,477.1406 334.1406,477.2969 C333.9844,477.5 333.7344,477.625 333.4844,477.625 C333.2813,477.625 333.0469,477.5313 332.9219,477.4063 C332.7969,477.2813 332.7656,477.1563 332.7031,476.7813 C332.625,476.3906 332.4531,476.1875 332,475.9375 C331.5625,475.6875 330.9844,475.5469 330.4375,475.5469 C328.8125,475.5469 327.625,476.7813 327.625,478.4531 L327.625,479.4844 C327.625,481.0781 328.8594,482.125 330.7813,482.125 C331.5,482.125 332.1406,482 332.5469,481.75 C332.7188,481.6563 332.7188,481.6563 333.1406,481.2188 C333.3281,481.0313 333.5156,480.9531 333.7188,480.9531 C334.1563,480.9531 334.5313,481.3281 334.5313,481.75 C334.5313,482.125 334.2188,482.5469 333.6719,482.9219 C332.9688,483.4375 331.8906,483.7188 330.7344,483.7188 C328.0156,483.7188 326.0313,481.9531 326.0313,479.5156 L326.0313,478.4531 C326.0313,475.9063 327.9219,473.9531 330.375,473.9531 C331.2188,473.9531 331.7656,474.0781 332.6563,474.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="118" x="344.5" y="485.625">async_with_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="316.5" x2="464.5" y1="495" y2="495"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="316.5" x2="464.5" y1="503" y2="503"/><!--class async_for_stmt--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="48" id="async_for_stmt" style="stroke: #A80036; stroke-width: 1.5;" width="141" x="301" y="271"/><ellipse cx="316" cy="287" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M318.1563,282.4844 L318.3125,282.5625 C318.5156,282.2656 318.7188,282.1719 318.9844,282.1719 C319.2656,282.1719 319.5313,282.3125 319.6719,282.5625 C319.7656,282.7031 319.7813,282.8281 319.7813,283.2344 L319.7813,284.5781 C319.7813,284.9688 319.75,285.1406 319.6406,285.2969 C319.4844,285.5 319.2344,285.625 318.9844,285.625 C318.7813,285.625 318.5469,285.5313 318.4219,285.4063 C318.2969,285.2813 318.2656,285.1563 318.2031,284.7813 C318.125,284.3906 317.9531,284.1875 317.5,283.9375 C317.0625,283.6875 316.4844,283.5469 315.9375,283.5469 C314.3125,283.5469 313.125,284.7813 313.125,286.4531 L313.125,287.4844 C313.125,289.0781 314.3594,290.125 316.2813,290.125 C317,290.125 317.6406,290 318.0469,289.75 C318.2188,289.6563 318.2188,289.6563 318.6406,289.2188 C318.8281,289.0313 319.0156,288.9531 319.2188,288.9531 C319.6563,288.9531 320.0313,289.3281 320.0313,289.75 C320.0313,290.125 319.7188,290.5469 319.1719,290.9219 C318.4688,291.4375 317.3906,291.7188 316.2344,291.7188 C313.5156,291.7188 311.5313,289.9531 311.5313,287.5156 L311.5313,286.4531 C311.5313,283.9063 313.4219,281.9531 315.875,281.9531 C316.7188,281.9531 317.2656,282.0781 318.1563,282.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="109" x="330" y="293.625">async_for_stmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="302" x2="441" y1="303" y2="303"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="302" x2="441" y1="311" y2="311"/><!--class async_funcdef--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="69.2813" id="async_funcdef" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="385.5" y="131"/><ellipse cx="400.5" cy="147" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M402.6563,142.4844 L402.8125,142.5625 C403.0156,142.2656 403.2188,142.1719 403.4844,142.1719 C403.7656,142.1719 404.0313,142.3125 404.1719,142.5625 C404.2656,142.7031 404.2813,142.8281 404.2813,143.2344 L404.2813,144.5781 C404.2813,144.9688 404.25,145.1406 404.1406,145.2969 C403.9844,145.5 403.7344,145.625 403.4844,145.625 C403.2813,145.625 403.0469,145.5313 402.9219,145.4063 C402.7969,145.2813 402.7656,145.1563 402.7031,144.7813 C402.625,144.3906 402.4531,144.1875 402,143.9375 C401.5625,143.6875 400.9844,143.5469 400.4375,143.5469 C398.8125,143.5469 397.625,144.7813 397.625,146.4531 L397.625,147.4844 C397.625,149.0781 398.8594,150.125 400.7813,150.125 C401.5,150.125 402.1406,150 402.5469,149.75 C402.7188,149.6563 402.7188,149.6563 403.1406,149.2188 C403.3281,149.0313 403.5156,148.9531 403.7188,148.9531 C404.1563,148.9531 404.5313,149.3281 404.5313,149.75 C404.5313,150.125 404.2188,150.5469 403.6719,150.9219 C402.9688,151.4375 401.8906,151.7188 400.7344,151.7188 C398.0156,151.7188 396.0313,149.9531 396.0313,147.5156 L396.0313,146.4531 C396.0313,143.9063 397.9219,141.9531 400.375,141.9531 C401.2188,141.9531 401.7656,142.0781 402.6563,142.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="104" x="414.5" y="153.625">async_funcdef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="386.5" x2="520.5" y1="163" y2="163"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="391.5" y="184.2656">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="386.5" x2="520.5" y1="192.2813" y2="192.2813"/><!--class suite--><rect fill="#FEFECE" filter="url(#f1qiqi72sr0axx)" height="90.5625" id="suite" style="stroke: #A80036; stroke-width: 1.5;" width="86" x="225.5" y="120"/><ellipse cx="249.05" cy="136" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M251.2063,131.4844 L251.3625,131.5625 C251.5656,131.2656 251.7688,131.1719 252.0344,131.1719 C252.3156,131.1719 252.5813,131.3125 252.7219,131.5625 C252.8156,131.7031 252.8313,131.8281 252.8313,132.2344 L252.8313,133.5781 C252.8313,133.9688 252.8,134.1406 252.6906,134.2969 C252.5344,134.5 252.2844,134.625 252.0344,134.625 C251.8313,134.625 251.5969,134.5313 251.4719,134.4063 C251.3469,134.2813 251.3156,134.1563 251.2531,133.7813 C251.175,133.3906 251.0031,133.1875 250.55,132.9375 C250.1125,132.6875 249.5344,132.5469 248.9875,132.5469 C247.3625,132.5469 246.175,133.7813 246.175,135.4531 L246.175,136.4844 C246.175,138.0781 247.4094,139.125 249.3313,139.125 C250.05,139.125 250.6906,139 251.0969,138.75 C251.2688,138.6563 251.2688,138.6563 251.6906,138.2188 C251.8781,138.0313 252.0656,137.9531 252.2688,137.9531 C252.7063,137.9531 253.0813,138.3281 253.0813,138.75 C253.0813,139.125 252.7688,139.5469 252.2219,139.9219 C251.5188,140.4375 250.4406,140.7188 249.2844,140.7188 C246.5656,140.7188 244.5813,138.9531 244.5813,136.5156 L244.5813,135.4531 C244.5813,132.9063 246.4719,130.9531 248.925,130.9531 C249.7688,130.9531 250.3156,131.0781 251.2063,131.4844 Z "/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="35" x="264.95" y="142.625">suite</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="226.5" x2="310.5" y1="152" y2="152"/><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="74" x="231.5" y="173.2656">statement</text><text fill="#000000" font-family="Segoe UI Semibold" font-size="16" lengthAdjust="spacingAndGlyphs" textLength="61" x="231.5" y="194.5469">stmt_list</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="226.5" x2="310.5" y1="202.5625" y2="202.5625"/><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="99,1918,99,1969.9769,528,1969.9769,528,1928,518,1918,99,1918" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="99,1918,99,1969.9769,528,1969.9769,528,1928,518,1918,317.5,1918,313.5,1858.224,309.5,1918,99,1918" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="518" x2="518" y1="1918" y2="1928"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="528" x2="518" y1="1928" y2="1928"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="352" x="105" y="1936.1458">if_stmt | while_stmt | for_stmt | try_stmt |</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="400" x="105" y="1950.1381">with_stmt | funcdef | classdef | async_with_stmt |</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="240" x="105" y="1964.1304">async_for_stmt | async_funcdef</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="6,8,6,59.9769,531,59.9769,531,18,521,8,6,8" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="6,8,6,59.9769,264.5,59.9769,268.5,119.88,272.5,59.9769,531,59.9769,531,18,521,8,6,8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="521" x2="521" y1="8" y2="18"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="531" x2="521" y1="18" y2="18"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="496" x="12" y="26.1458">suite ::= stmt_list NEWLINE | NEWLINE INDENT statement+ DEDENT</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="376" x="12" y="40.1381">statement ::= stmt_list NEWLINE | compound_stmt</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="400" x="12" y="54.1304">stmt_list ::= simple_stmt (";" simple_stmt)* [";"]</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,1715.5,594,1739.4923,1327,1739.4923,1327,1725.5,1317,1715.5,594,1715.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1317" x2="1317" y1="1715.5" y2="1725.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1327" x2="1317" y1="1725.5" y2="1725.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="712" x="600" y="1733.6458">if_stmt ::= "if" expression ":" suite ( "elif" expression ":" suite )* ["else" ":" suite]</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="597,1490.5,597,1514.4923,1114,1514.4923,1114,1500.5,1104,1490.5,597,1490.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1104" x2="1104" y1="1490.5" y2="1500.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1114" x2="1104" y1="1500.5" y2="1500.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="496" x="603" y="1508.6458">while_stmt ::= "while" expression ":" suite ["else" ":" suite]</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,1361.5,594,1385.4923,1255,1385.4923,1255,1371.5,1245,1361.5,594,1361.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1245" x2="1245" y1="1361.5" y2="1371.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1255" x2="1245" y1="1371.5" y2="1371.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="640" x="600" y="1379.6458">for_stmt ::= "for" target_list "in" expression_list ":" suite ["else" ":" suite]</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,1218.5,594,1270.4769,1607,1270.4769,1607,1228.5,1597,1218.5,594,1218.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1597" x2="1597" y1="1218.5" y2="1228.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1607" x2="1597" y1="1228.5" y2="1228.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="272" x="600" y="1236.6458">try_stmt ::= try1_stmt | try2_stmt</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="984" x="600" y="1250.6381">try1_stmt ::= "try" ":" suite ("except" [expression ["as" identifier]] ":" suite)+ ["else" ":" suite] ["finally" ":" suite]</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="392" x="600" y="1264.6304">try2_stmt ::= "try" ":" suite "finally" ":" suite</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,1096.5,594,1134.4846,1079,1134.4846,1079,1106.5,1069,1096.5,594,1096.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1069" x2="1069" y1="1096.5" y2="1106.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1079" x2="1069" y1="1106.5" y2="1106.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="456" x="600" y="1114.6458">with_stmt ::= "with" with_item ("," with_item)* ":" suite</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="304" x="600" y="1128.6381">with_item ::= expression ["as" target]</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,829,594,1020.9,1511,1020.9,1511,839,1501,829,594,829" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="594,829,594,1020.9,1511,1020.9,1511,839,1501,829,740.638,829,471.019,748.91,732.638,829,594,829" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1501" x2="1501" y1="829" y2="839"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1511" x2="1501" y1="839" y2="839"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="736" x="600" y="847.1458">funcdef ::= [decorators] "def" funcname "(" [parameter_list] ")" ["-&gt;" expression] ":" suite</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="608" y="861.1381"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="200" x="600" y="875.1304">decorators ::= decorator+</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="552" x="600" y="889.1227">decorator ::= "@" dotted_name ["(" [argument_list [","]] ")"] NEWLINE</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="352" x="600" y="903.115">dotted_name ::= identifier ("." identifier)*</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="608" y="917.1073"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="184" x="600" y="931.0996">funcname ::= identifier</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="608" y="945.0919"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="872" x="600" y="959.0842">parameter_list ::= defparameter ("," defparameter)* ["," [parameter_list_starargs]] | parameter_list_starargs</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="568" x="600" y="973.0766">parameter_list_starargs ::= "*" [parameter] ("," defparameter)* ["," ["</text><text fill="#000000" font-family="Courier" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="1168" y="972.5309">" parameter [","]]] | "</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="136" x="1352" y="973.0766">" parameter [","]</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="328" x="600" y="987.0689">parameter ::= identifier [":" expression]</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="344" x="600" y="1001.0612">defparameter ::= parameter ["=" expression]</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="608" y="1015.0535"/><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,708.5,594,760.4769,1159,760.4769,1159,718.5,1149,708.5,594,708.5" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="594,708.5,594,760.4769,1159,760.4769,1159,718.5,1149,708.5,788.036,708.5,454.226,618.91,780.036,708.5,594,708.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1149" x2="1149" y1="708.5" y2="718.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1159" x2="1149" y1="718.5" y2="718.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="536" x="600" y="726.6458">classdef ::= [decorators] "class" classname [inheritance] ":" suite</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="312" x="600" y="740.6381">inheritance ::= "(" [argument_list] ")"</text><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="192" x="600" y="754.6304">classname ::= identifier</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,283,594,306.9923,1463,306.9923,1463,293,1453,283,594,283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="594,283,594,306.9923,1463,306.9923,1463,293,1453,283,982.83,283,521.718,181.63,974.83,283,594,283" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1453" x2="1453" y1="283" y2="293"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1463" x2="1453" y1="293" y2="293"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="848" x="600" y="301.1458">async_funcdef ::= [decorators] "async" "def" funcname "(" [parameter_list] ")" ["-&gt;" expression] ":" suite</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,379,594,402.9923,895,402.9923,895,389,885,379,594,379" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="594,379,594,402.9923,895,402.9923,895,389,885,379,704.737,379,442.097,313.79,696.737,379,594,379" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="885" x2="885" y1="379" y2="389"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="895" x2="885" y1="389" y2="389"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="280" x="600" y="397.1458">async_for_stmt ::= "async" for_stmt</text><polygon fill="#FFFFE6" filter="url(#f1qiqi72sr0axx)" points="594,593.5,594,617.4923,911,617.4923,911,603.5,901,593.5,594,593.5" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFE6" points="594,593.5,594,617.4923,911,617.4923,911,603.5,901,593.5,722.301,593.5,462.02,511.02,714.301,593.5,594,593.5" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="901" x2="901" y1="593.5" y2="603.5"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="911" x2="901" y1="603.5" y2="603.5"/><text fill="#000000" font-family="Courier" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="296" x="600" y="611.6458">async_with_stmt ::= "async" with_stmt</text><!--link if_stmt to compound_stmt--><!--link while_stmt to compound_stmt--><!--link for_stmt to compound_stmt--><!--link try_stmt to compound_stmt--><!--link with_stmt to compound_stmt--><!--link funcdef to compound_stmt--><!--link classdef to compound_stmt--><!--link async_with_stmt to compound_stmt--><!--link async_for_stmt to compound_stmt--><!--link async_funcdef to compound_stmt--><!--link if_stmt to GMN341177--><path d="M561.603,1527.219 C567.578,1530.556 573.677,1533.902 579.5,1537 C713.198,1608.137 877.087,1686.861 937.08,1715.404 " fill="none" id="if_stmt-GMN341177" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><!--link while_stmt to GMN341180--><path d="M555.874,1399.61 C562.78,1402.534 569.776,1405.398 576.5,1408 C662.255,1441.189 765.35,1473.931 819.005,1490.446 " fill="none" id="while_stmt-GMN341180" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><!--link for_stmt to GMN341183--><path d="M528.618,1262.916 C543.82,1268.32 560.799,1274.13 576.5,1279 C684.052,1312.358 812.405,1345.031 879.135,1361.491 " fill="none" id="for_stmt-GMN341183" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><!--link try_stmt to GMN341186--><path d="M509.643,1131.449 C530,1137.713 554.298,1144.746 576.5,1150 C694.639,1177.96 829.523,1201.846 932.853,1218.477 " fill="none" id="try_stmt-GMN341186" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><!--link with_stmt to GMN341189--><path d="M485.426,959.53 C510.423,979.326 543.964,1003.799 576.5,1021 C639.475,1054.293 716.877,1080.423 770.777,1096.497 " fill="none" id="with_stmt-GMN341189" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><!--
@startuml
skinparam monochrome false
'skinparam defaultFontName Times New Roman
skinparam defaultFontName Segoe UI Semibold
skinparam defaultFontSize 16
'skinparam backgroundColor #EEEBDC

skinparam note {
  BackgroundColor #ffffe6
  FontSize 14
  FontName Courier
}

package compound_stmt  {
abstract class compound_stmt {
if_stmt
while_stmt
for_stmt
try_stmt
with_stmt
funcdef
classdef
async_with_stmt
async_for_stmt
async_funcdef 
}

class if_stmt {
	suite
}
class while_stmt {
	suite
}
class for_stmt {
	suite
}
class try_stmt {
	suite
}
class with_stmt {
	suite
}
class funcdef {
	suite
}
class classdef {
	suite
}
class async_with_stmt {
}
class async_for_stmt {
	
}
class async_funcdef  {
	suite
}


class suite {
statement	
stmt_list
}

if_stmt  - -[hidden]|> compound_stmt
while_stmt  - - -[hidden]|> compound_stmt
for_stmt  - - - -[hidden]|> compound_stmt
try_stmt  - - - - -[hidden]|> compound_stmt
with_stmt  - - - - - -[hidden]|> compound_stmt
funcdef  - - - - - - -[hidden]|> compound_stmt
classdef  - - - - - - - -[hidden]|> compound_stmt
async_with_stmt  - - - - - - - - -[hidden]|> compound_stmt
async_for_stmt  - - - - - - - - - - -[hidden]|> compound_stmt
async_funcdef  - - - - - - - - - - - -[hidden]|> compound_stmt

'async_with_stmt -[hidden]> async_for_stmt
'async_with_stmt -[hidden]> async_funcdef
}

note right of compound_stmt 
  if_stmt | while_stmt | for_stmt | try_stmt | 
  with_stmt | funcdef | classdef | async_with_stmt | 
  async_for_stmt | async_funcdef 
end note

note top of suite 
	suite ::= stmt_list NEWLINE | NEWLINE INDENT statement+ DEDENT 
	statement ::= stmt_list NEWLINE | compound_stmt 
	stmt_list ::= simple_stmt (";" simple_stmt)* [";"]
end note

note right of if_stmt
if_stmt ::= "if" expression ":" suite ( "elif" expression ":" suite )* ["else" ":" suite]
end note

note right of while_stmt
while_stmt ::= "while" expression ":" suite ["else" ":" suite]
end note

note right of for_stmt
for_stmt ::= "for" target_list "in" expression_list ":" suite ["else" ":" suite]
end note

note right of try_stmt
try_stmt ::= try1_stmt | try2_stmt 
try1_stmt ::= "try" ":" suite ("except" [expression ["as" identifier]] ":" suite)+ ["else" ":" suite] ["finally" ":" suite] 
try2_stmt ::= "try" ":" suite "finally" ":" suite
end note

note right of with_stmt
with_stmt ::= "with" with_item ("," with_item)* ":" suite 
with_item ::= expression ["as" target]
end note

note right of funcdef
funcdef ::= [decorators] "def" funcname "(" [parameter_list] ")" ["->" expression] ":" suite 

decorators ::= decorator+ 
decorator ::= "@" dotted_name ["(" [argument_list [","]] ")"] NEWLINE 
dotted_name ::= identifier ("." identifier)* 

funcname ::= identifier

parameter_list ::= defparameter ("," defparameter)* ["," [parameter_list_starargs]] | parameter_list_starargs 
parameter_list_starargs ::= "*" [parameter] ("," defparameter)* ["," ["**" parameter [","]]] | "**" parameter [","] 
parameter ::= identifier [":" expression] 
defparameter ::= parameter ["=" expression] 

end note

note right of classdef
classdef ::= [decorators] "class" classname [inheritance] ":" suite 
inheritance ::= "(" [argument_list] ")" 
classname ::= identifier
end note

note right of async_funcdef
async_funcdef ::= [decorators] "async" "def" funcname "(" [parameter_list] ")" ["->" expression] ":" suite
end note

note right of async_for_stmt
async_for_stmt ::= "async" for_stmt
end note

note right of async_with_stmt
async_with_stmt ::= "async" with_stmt
end note
@enduml

PlantUML version 1.2017.13(Wed May 10 16:52:33 UTC 2017)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>